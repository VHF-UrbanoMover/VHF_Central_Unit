function NVMList=vcu_getFixedNvmList()
NVMList={...
    % Use the examples below to create your Fixed NVM Variables
    % Name: Variable name.
    % Type: The data type of the variable.
    % Size: The data length of the variable.
    % Init: Initialized settings. 1 indicates that the initial value is equal to Value after code is updated, and 0 indicates that the initial value is equal to Flash after code is updated.
    % Value: The initial value of variable.
    % struct('name', {'Fnvm_double'},'type', {'double'},'size', 1,'init', 0,'value',1), ...
    % struct('name', {'Fnvm_int8'},'type', {'int8'},'size', 2,'init', 1,'value',[1 2]), ...
    % struct('name', {'Fnvm_uint8'},'type', {'uint8'},'size', 1,'init', 0,'value',1), ...
    % struct('name', {'Fnvm_boolean'},'type', {'boolean'},'size', 4,'init', 0,'value',[1 2 3 4]), ...
    % struct('name', {'Fnvm_uint16'},'type', {'uint16'},'size', 2,'init', 1,'value',[1 2]), ...
    % struct('name', {'Fnvm_int16'},'type', {'int16'},'size', 2,'init', 1,'value',[1 2]), ...
    % struct('name', {'Fnvm_single'},'type', {'float'},'size', 1,'init', 0,'value',1), ...
    % struct('name', {'Fnvm_int32'},'type', {'int32'},'size', 1,'init', 0,'value',1), ...
    % struct('name', {'Fnvm_uint32'},'type', {'uint32'},'size', 4,'init', 0,'value',[1 2 3 4]), ...
    struct('name', {'Fnvm_Sensor_stSelfTest'},'type', {'uint8'},'size', 1,'init', 0,'value',0), ...
};
end